#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="Set up fps for recording shs references for gpu evaluation"

# Extended description
MSextdescr="A script setting up a fps to record a reference for SHS evaluation on a gpu.
This includes generating a mask, reference points and a convolution kernel.
"

# standard configuration
# location ./scripts/
source milk-script-std-config

# prerequisites
#
RequiredCommands=(milk)
RequiredFiles=(LOOPNUMBER)
RequiredFiles=(LOOPNAME)
RequiredPipes=()
RequiredDirs=()

# SCRIPT MANDATORY ARGUMENTS
# syntax: "name:type(s)/test(s):description"
#
MSarg+=( "streamInName:string:stream input name" )
MSarg+=( "nbframe:int:number of frames to be averaged" )
MSarg+=( "minSpotPrec_urad:float:The minimum precision of a subaperture to be considered valid" )
MSarg+=( "fitsDir:string:destination folder for fitsfiles" )

# SCRIPT OPTIONS
# syntax: "short:long:functioncall:args[types]:description"
#
VISUALIZE="OFF"
MSopt+=( "v:visual:enableVisualization::enable additional visualization" )
function enableVisualization() {
	VISUALIZE="ON"
}

source milk-argparse

set +u
if [ "${EXITSTATUS}" = "1" ]; then
exit
fi
set -u

printf "\n"

if [ -f LOOPNUMBER ]; then
    AOLOOPNUMBER=$( head -1 LOOPNUMBER )
else
	echo "Error: no LOOPNUMBER file. Are we running this from the correct directory ?"
    exit
fi
echo "Loopnumber: ${AOLOOPNUMBER}"

if [ -f LOOPNAME ]; then
    AOLOOPNAME=$( head -1 LOOPNAME )
else
	echo "Error: no LOOPNAME file. Are we running this from the correct directory ?"
    exit
fi
echo "Loopname: ${AOLOOPNAME}"

instream="${inputMSargARRAY[0]}"
nbframe="${inputMSargARRAY[1]}"
uradThresh="${inputMSargARRAY[2]}"
ARCHDIR="${inputMSargARRAY[3]}"
echo "Input stream: ${instream}"
echo "Number of frames: ${nbframe}"
echo "Demanded spot precision: ${uradThresh}"
echo "Fits destination: ${ARCHDIR}"

MILK_QUIET=1 milk << EOF
mload cacaoAOloopControlIOtools

# Set up process info
cacaoio.shsGpuRef ..procinfo 1
# Set triggermode to 3 (SEMAPHORE) - is triggered by stream update
cacaoio.shsGpuRef ..triggermode 3
# Set triggerstream to input stream
cacaoio.shsGpuRef ..triggersname "${instream}"
# run indefinitely
cacaoio.shsGpuRef ..loopcntMax ${nbframe}

# Set input streams
readshmim ${instream}
cacaoio.shsGpuRef .in_name ${instream}
readshmim ${instream}_AVG
cacaoio.shsGpuRef .dark ${instream}_AVG

# Set up other parameters
cacaoio.shsGpuRef .savingLocation ${ARCHDIR}
cacaoio.shsGpuRef .loopnumber ${AOLOOPNUMBER} 
cacaoio.shsGpuRef .loopname ${AOLOOPNAME}
cacaoio.shsGpuRef .visualize ${VISUALIZE}
cacaoio.shsGpuRef .minSpotPrec ${uradThresh}

# Initialize FPS
cacaoio.shsGpuRef _FPSINIT_ "${instream}"

exitCLI
EOF
