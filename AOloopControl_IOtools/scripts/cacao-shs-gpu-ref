#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="Record shs ref"

# Extended description
MSextdescr="Record a reference for SHS evaluation on a gpu
This includes generating a mask, reference points and a convolution kernel.
"

# standard configuration
# location ./scripts/
source milk-script-std-config

# prerequisites
#
RequiredCommands=(milk)
RequiredFiles=(LOOPNUMBER)
RequiredFiles=(LOOPNAME)
RequiredPipes=()
RequiredDirs=()

# SCRIPT MANDATORY ARGUMENTS
# syntax: "name:type(s)/test(s):description"
#
MSarg+=( "streamInName:string:stream input name" )
MSarg+=( "nbframe:int:number of frames to be averaged" )
MSarg+=( "minSpotPrec_urad:float:The minimum precision of a subaperture to be considered valid" )
MSarg+=( "fitsDir:string:destination folder for fitsfiles" )

# SCRIPT OPTIONS
# syntax: "short:long:functioncall:args[types]:description"
#
VISUALIZE="OFF"
MSopt+=( "v:visual:enableVisualization::enable additional visualization" )
function enableVisualization() {
	VISUALIZE="ON"
}

source milk-argparse

set +u
if [ "${EXITSTATUS}" = "1" ]; then
exit
fi
set -u

if [ -f LOOPNUMBER ]; then
    AOLOOPNUMBER=$( head -1 LOOPNUMBER )
else
	echo "Error: no LOOPNUMBER file. Are we running this from the correct directory ?"
    exit
fi
echo "Loop ${AOLOOPNUMBER}"

if [ -f LOOPNAME ]; then
    AOLOOPNAME=$( head -1 LOOPNAME )
else
	echo "Error: no LOOPNAME file. Are we running this from the correct directory ?"
    exit
fi
echo "Loop ${AOLOOPNAME}"

instream="${inputMSargARRAY[0]}"
nbframe="${inputMSargARRAY[1]}"
uradThresh="${inputMSargARRAY[2]}"
ARCHDIR="${inputMSargARRAY[3]}"
echo "Stream in: ${instream}"
echo "Number of frame: ${nbframe}"
echo "Demanded spot precision: ${uradThresh}"
echo "Fits destination: ${ARCHDIR}"

milk-all << EOF
mload cacaoAOloopControlIOtools

readshmim ${instream}
readshmim ${instream}_AVG
cacaoio.shsGpuRef .loopnumber ${AOLOOPNUMBER}
cacaoio.shsGpuRef .loopname ${AOLOOPNAME}
cacaoio.shsGpuRef .visualize ${VISUALIZE}
cacaoio.shsGpuRef .minSpotPrec ${uradThresh}
cacaoio.shsGpuRef ..procinfo 1
cacaoio.shsGpuRef ..triggermode 3
cacaoio.shsGpuRef ..triggersname ${instream}
cacaoio.shsGpuRef ..loopcntMax ${nbframe}
cacaoio.shsGpuRef ${instream} ${instream}_AVG
exitCLI
EOF

# Gather the streamnames for saving
snamecnt=0
sname1="none"
sname2="none"
sname3="none"
while IFS= read -r line; do
    if [ "${snamecnt}" = "0" ]; then
        sname1="$line"
    fi
    if [ "${snamecnt}" = "1" ]; then
        sname2="$line"
    fi
    if [ "${snamecnt}" = "2" ]; then
        sname3="$line"
    fi
    ((snamecnt=snamecnt+1))
done < tmp-refnames.txt

printf "%s\n" "$sname1"
printf "%s\n" "$sname2"
printf "%s\n" "$sname3"

milk << EOF
readshmim ${sname1}
saveFITS ${sname1} "${sname1}.fits"
readshmim ${sname2}
saveFITS ${sname2} "${sname2}.fits"
readshmim ${sname3}
saveFITS ${sname3} "${sname3}.fits"
exitCLI
EOF

# Save the files
if [ ! -d "${ARCHDIR}" ]; then
  mkdir ${ARCHDIR}
fi
timestamp=$(date -u --iso-8601=seconds)
echo Saving to ${ARCHDIR}/${sname1}_${timestamp}.fits
mv ${sname1}.fits ${ARCHDIR}/${sname1}_${timestamp}.fits
echo Saving to ${ARCHDIR}/${sname2}_${timestamp}.fits
mv ${sname2}.fits ${ARCHDIR}/${sname2}_${timestamp}.fits
echo Saving to ${ARCHDIR}/${sname3}_${timestamp}.fits
mv ${sname3}.fits ${ARCHDIR}/${sname3}_${timestamp}.fits

# Delete temporary streamname file
rm tmp-refnames.txt
