#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="Launch evaluation of an SHS stream on a gpu "

# Extended description
MSextdescr="Launches the evaluation of an SHS stream on a gpu.
This requires a reference to be recorded and loaded into memory.
"

# standard configuration
# location ./scripts/
source milk-script-std-config

# prerequisites
#
RequiredCommands=(milk)
RequiredFiles=(LOOPNUMBER)
RequiredFiles=(LOOPNAME)
RequiredPipes=()
RequiredDirs=()

# SCRIPT MANDATORY ARGUMENTS
# syntax: "name:type(s)/test(s):description"
#
MSarg+=( "refName:string:stream name of the reference" )
MSarg+=( "camName:string:stream name of the shs camera trigger" )
MSarg+=( "darkName:string:stream name of the shs dark frame" )
MSarg+=( "nbframe:int:number of frames to stay alive (TEMP)" )

# SCRIPT OPTIONS
# syntax: "short:long:functioncall:args[types]:description"
#

source milk-argparse

set +u
if [ "${EXITSTATUS}" = "1" ]; then
exit
fi
set -u

if [ -f LOOPNUMBER ]; then
    AOLOOPNUMBER=$( head -1 LOOPNUMBER )
else
	echo "Error: no LOOPNUMBER file. Are we running this from the correct directory ?"
    exit
fi
echo "Loop ${AOLOOPNUMBER}"

if [ -f LOOPNAME ]; then
    AOLOOPNAME=$( head -1 LOOPNAME )
else
	echo "Error: no LOOPNAME file. Are we running this from the correct directory ?"
    exit
fi
echo "Loop ${AOLOOPNAME}"

refstream="${inputMSargARRAY[0]}"
camstream="${inputMSargARRAY[1]}"
darkstream="${inputMSargARRAY[2]}"
nbframe="${inputMSargARRAY[3]}"
echo "Reference stream: ${refstream}"
echo "SHS camera stream: ${camstream}"
echo "SHS dark stream: ${darkstream}"
echo "Number of frame: ${nbframe}"

milk-all << EOF
mload cacaoAOloopControlIOtools
cmd? cacaoio.shsGpuEval

readshmim ${refstream}
readshmim ${camstream}
readshmim ${darkstream}
cacaoio.shsGpuEval ..procinfo 1
cacaoio.shsGpuEval ..triggermode 3
cacaoio.shsGpuEval ..triggersname ${camstream}
cacaoio.shsGpuEval ..loopcntMax ${nbframe}
cacaoio.shsGpuEval ${refstream} ${camstream} ${darkstream}
exitCLI
EOF
