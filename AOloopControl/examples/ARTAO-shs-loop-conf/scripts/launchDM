#!/usr/bin/env bash

# Script to launch the Dynamic Optics DM control. This script:
#   - creates a dedicated tmux session
#   - launches the DM control inside the session
#   - moves the process to its dedicated cset and applies a RTprio

# Check if the user is root
if [ "$EUID" -eq 0 ]; then
  echo "Please do not run as root as the tmux session will be invisible otherwise."
  exit 1
fi

source cacaovars.*.bash

DM_ADDRESS="192.168.0.1"
#INPUT_STREAM="dm${CACAO_DMINDEX}disp"
INPUT_STREAM="aol${CACAO_LOOPNUMBER}_dmdisp"

export SESSION_NAME="DO_DM-${CACAO_LOOPNUMBER}"
CACAO_DMSETTINGS_FILE="${PWD}/dmsettings"
COMMAND="./milk-2-dynamic-optics-dm -d"

CPU_SET_NAME="dmdrv"
REAL_TIME_PRIORITY="49"

# Check if the tmux session already exists
tmux has-session -t "${SESSION_NAME}" 2>/dev/null

if [ $? != 0 ]; then
  echo "Creating new session ${SESSION_NAME}"
  tmux new-session -d -s "$SESSION_NAME"
else
  echo "Session ${SESSION_NAME} already exists. Skipping creation."
fi

# Check if the real-time process is already running
PID=$(pgrep -f "$COMMAND")

if [ -n "$PID" ]; then
  echo "Real-time process is already running with PID $PID. Skipping launch."
else
  echo "Creating dm settings file"
  # Copy the dummy file into the rootdir - just in case new fields are set.
  cp "${MILK_TO_DO_DM_PATH}/../dm-settings-default" ${CACAO_DMSETTINGS_FILE}
  # Append actual values
  echo "" >> ${CACAO_DMSETTINGS_FILE} # make sure we start in new line
  echo "DM-IPAddress=${DM_ADDRESS}" >> ${CACAO_DMSETTINGS_FILE}
  echo "actuatorCount=${CACAO_DMxsize}" >> ${CACAO_DMSETTINGS_FILE}
  echo "DMcombStream=${INPUT_STREAM}" >> ${CACAO_DMSETTINGS_FILE}

  echo "Launching real-time process."
  tmux send-keys -t "$SESSION_NAME" "cd $MILK_TO_DO_DM_PATH" C-m
  tmux send-keys -t "$SESSION_NAME" "$COMMAND $CACAO_DMSETTINGS_FILE&" C-m
  tmux send-keys -t "$SESSION_NAME" "fg" C-m
  sleep 2

  # Recheck the PID after launch
  PID=$(pgrep -f "$COMMAND")

  # Apply real-time priority and move to CPU set
  echo "Applying real-time priority to PID $PID"
  sudo chrt -r -p "$REAL_TIME_PRIORITY" "$PID"
  echo "Moving PID $PID to CPU set $CPU_SET_NAME"
  sudo cset proc -m -p "$PID" -t "$CPU_SET_NAME"
fi

# Exit on return values != 0
set -e

# End script
echo "Please attach to the session in order to control the camera using:"
echo "tmux a -t $SESSION_NAME"
