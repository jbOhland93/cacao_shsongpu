#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="Compute RM masks from zonal response matrix"

set +u
if [ -z ${CACAO_CONFWDIR+x} ]; then
	CACAO_CONFWDIR="conf"
fi
set -u


MSextdescr="Compute DM and WFS maps and masks

Input: response matrix
default: ${CACAO_CONFWDIR}/zrespM.fits

Output: DM and WFS maps and msaks
${CACAO_CONFWDIR}/dmmap.fits
${CACAO_CONFWDIR}/dmmask.fits
${CACAO_CONFWDIR}/wfsmap.fits
${CACAO_CONFWDIR}/wfsmask.fits
"

source milk-script-std-config
source cacao-check-cacaovars


RMfname="${CACAO_CONFWDIR}/zrespM.fits"


MSopt+=( "f:RMfname:set_RMfname:RMfname[string]:set resp matrix filename" )
function set_RMfname() {
	RMfname="$1"
}

CACAO_CONFSTREAMLOAD=1
MSopt+=( "nl:noload:set_noload::do not load to shared memory" )
function set_noload() {
	CACAO_CONFSTREAMLOAD=0
}



DMmaskRMp0="0.2"
DMmaskRMc0="0.5"
DMmaskRMp1="0.5"
DMmaskRMc1="0.5"

WFSmaskRMp0="0.2"
WFSmaskRMc0="0.5"
WFSmaskRMp1="0.5"
WFSmaskRMc1="0.5"


MSopt+=( "dmp0:percentile0:set_DMp0:percentile0[float]:DM mask point 0 percentile [$DMmaskRMp0]" )
function set_DMp0() {
	DMmaskRMp0="$1"
}

MSopt+=( "dmc0:coeff0:set_DMc0:coeff0[float]:DM mask point 0 coefficient [$DMmaskRMc0]" )
function set_DMc0() {
	DMmaskRMc0="$1"
}

MSopt+=( "dmp1:percentile1:set_DMp1:percentile1[float]:DM mask point 1 percentile [$DMmaskRMp1]" )
function set_DMp1() {
	DMmaskRMp1="$1"
}

MSopt+=( "dmc1:coeff1:set_DMc1:coeff1[float]:DM mask point 1 coefficient [$DMmaskRMc1]" )
function set_DMc1() {
	DMmaskRMc1="$1"
}


MSopt+=( "wfsp0:percentile0:set_WFSp0:percentile0[float]:WFS mask point 0 percentile [$WFSmaskRMp0]" )
function set_WFSp0() {
	WFSmaskRMp0="$1"
}

MSopt+=( "wfsc0:coeff0:set_WFSc0:coeff0[float]:WFS mask point 0 coefficient [$WFSmaskRMc0]" )
function set_WFSc0() {
	WFSmaskRMc0="$1"
}

MSopt+=( "wfsp1:percentile1:set_WFSp1:percentile1[float]:WFS mask point 1 percentile [$WFSmaskRMp1]" )
function set_WFSp1() {
	WFSmaskRMp1="$1"
}

MSopt+=( "wfsc1:coeff1:set_WFSc1:coeff1[float]:WFS mask point 1 coefficient [$WFSmaskRMc1]" )
function set_WFSc1() {
	WFSmaskRMc1="$1"
}


nomask=0
MSopt+=( "nm:nomask:set_nomask::compute map only, no mask" )
function set_nomask() {
	nomask=1
}


source milk-argparse

checkFile "${RMfname}"

if [ ${EXITSTATUS} = 1 ]; then
	exit 1
fi






echo "dmp0 = ${DMmaskRMp0}"
cacaomsglog "dmp0 = ${DMmaskRMp0}"

echo "dmc0 = ${DMmaskRMc0}"
cacaomsglog "dmc0 = ${DMmaskRMc0}"

echo "dmp1 = ${DMmaskRMp1}"
cacaomsglog "dmp1 = ${DMmaskRMp1}"

echo "dmc1 = ${DMmaskRMc1}"
cacaomsglog "dmc1 = ${DMmaskRMc1}"


echo "wfsp0 = ${WFSmaskRMp0}"
cacaomsglog "wfsp0 = ${WFSmaskRMp0}"

echo "wfsc0 = ${WFSmaskRMc0}"
cacaomsglog "wfsc0 = ${WFSmaskRMc0}"

echo "wfsp1 = ${WFSmaskRMp1}"
cacaomsglog "wfsp1 = ${WFSmaskRMp1}"

echo "wfsc1 = ${WFSmaskRMc1}"
cacaomsglog "wfsc1 = ${WFSmaskRMc1}"


cacaomsglog "START"


#loadfits "conf/RMmodesWFS/zrespM-H.fits" zrespM

cacao << EOF
loadfits "${RMfname}" zrespM

cacaocc.compmasksWFSDM .dmmask.perc0 ${DMmaskRMp0}
cacaocc.compmasksWFSDM .dmmask.coeff0 ${DMmaskRMc0}
cacaocc.compmasksWFSDM .dmmask.perc1 ${DMmaskRMp1}
cacaocc.compmasksWFSDM .dmmask.coeff1 ${DMmaskRMc1}

cacaocc.compmasksWFSDM .wfsmask.perc0 ${WFSmaskRMp0}
cacaocc.compmasksWFSDM .wfsmask.coeff0 ${WFSmaskRMc0}
cacaocc.compmasksWFSDM .wfsmask.perc1 ${WFSmaskRMp1}
cacaocc.compmasksWFSDM .wfsmask.coeff1 ${WFSmaskRMc1}

cacaocc.compmasksWFSDM zrespM ${CACAO_DMxsize} ${CACAO_DMysize}

saveFITS dmmap "${CACAO_CONFWDIR}/dmmap.fits"
saveFITS wfsmap "${CACAO_CONFWDIR}/wfsmap.fits"

saveFITS dmmask "${CACAO_CONFWDIR}/dmmask.tmp.fits"
saveFITS wfsmask "${CACAO_CONFWDIR}/wfsmask.tmp.fits"

listim
exitCLI
EOF



# LOGGING
# see cacaofuncs-log for conventions
#
source cacaofuncs-log

cacao-calib-streamupdate dmmap
cacao-calib-streamupdate wfsmap


if [[ "$nomask" -eq 0 ]]; then
mv ${CACAO_CONFWDIR}/dmmask.tmp.fits ${CACAO_CONFWDIR}/dmmask.fits
mv ${CACAO_CONFWDIR}/wfsmask.tmp.fits ${CACAO_CONFWDIR}/wfsmask.fits

cacao-calib-streamupdate dmmask
cacao-calib-streamupdate wfsmask

else
rm ${CACAO_CONFWDIR}/dmmask.tmp.fits
rm ${CACAO_CONFWDIR}/wfsmask.tmp.fits
fi


cacaomsglog "END"
